import random
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import (
    ApplicationBuilder, CommandHandler, CallbackQueryHandler,
    MessageHandler, ContextTypes, filters
)

# –•—Ä–∞–Ω–∏–ª–∏—â–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤
user_choices = {}

# –û–ø—Ü–∏–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–ª—è –ø—Ä–æ—Å—Ç–æ–≥–æ –±—Ä–æ—Å–∫–∞
default_options = [
    "–ü–æ—á–∏—Ç–∞—Ç—å",
    "–ü—Ä–æ–∫—Ä–∞—Å—Ç–∏–Ω–∏—Ä–æ–≤–∞—Ç—å –¥–∞–ª—å—à–µ",
    "–ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –ø–æ–µ–∑–¥–∫—É",
    "–ü—Ä–æ–≥—É–ª—è—Ç—å—Å—è",
    "–ü–æ–∑–≤–æ–Ω–∏—Ç—å –±–ª–∏–∑–∫–æ–º—É",
    "–í—ã–ø–∏—Ç—å —á–∞–π"
]

# –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
welcome_messages = [
    "–ö–∞–∂–¥—ã–π –¥–µ–Ω—å –º—ã –¥–µ–ª–∞–µ–º –≤—ã–±–æ—Ä, –æ–ø–∏—Ä–∞—è—Å—å –Ω–∞ –ø—Ä–∏–≤—ã—á–∫–∏ –∏ —Å—Ç–∞—Ä—ã–π –æ–ø—ã—Ç.\n"
    "–¢–∞–∫ –º–æ–∑–≥ —ç–∫–æ–Ω–æ–º–∏—Ç —ç–Ω–µ—Ä–≥–∏—é ‚Äî –∏ –º—ã —Å–Ω–æ–≤–∞ –∏–¥—ë–º –ø–æ –ø—Ä–æ—Ç–æ–ø—Ç–∞–Ω–Ω–æ–π –¥–æ—Ä–æ–∂–∫–µ.\n\n"
    "–•–æ—á–µ—à—å –≤—ã–π—Ç–∏ –∏–∑ –ø–µ—Ç–ª–∏?\n–î–æ–±–∞–≤—å –Ω–µ–º–Ω–æ–≥–æ —Å–ª—É—á–∞–π–Ω–æ—Å—Ç–∏. –ù–µ–º–Ω–æ–≥–æ –º–∞–≥–∏–∏. üé≤\n\n"
    "–ù–∞–∑–Ω–∞—á—å –æ–ø—Ü–∏–∏ –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –±—Ä–æ—Å—å –∫—É–±–∏–∫ ‚Äî –æ—Å–≤–æ–±–æ–¥–∏ –≤—Ä–µ–º—è –¥–ª—è –≤–∞–∂–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏–π.",

    "–ú—ã —á–∞—Å—Ç–æ –≤—ã–±–∏—Ä–∞–µ–º –Ω–µ —Ç–æ, —á—Ç–æ —Ö–æ—Ç–∏–º, –∞ —Ç–æ, —á—Ç–æ —É–∂–µ –¥–µ–ª–∞–ª–∏.\n"
    "–ú–æ–∑–≥ –ª—é–±–∏—Ç –ø–æ–≤—Ç–æ—Ä—è—Ç—å. –ü—Ä–∏–≤—ã—á–∫–∏ —Å–∏–ª—å–Ω–µ–µ –∂–µ–ª–∞–Ω–∏–π.\n\n"
    "–≠—Ç–æ—Ç –±–æ—Ç —Å–æ–∑–¥–∞–Ω, —á—Ç–æ–±—ã —Å–ª–æ–º–∞—Ç—å –ø–µ—Ç–ª—é.\n–ë—Ä–æ—Å—å –∫—É–±–∏–∫ ‚Äî –ø—É—Å—Ç—å –í—Å–µ–ª–µ–Ω–Ω–∞—è –ø–æ–¥—Å–∫–∞–∂–µ—Ç. ‚ú®\n\n"
    "–ù–∞–∑–Ω–∞—á—å –æ–ø—Ü–∏–∏ –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –±—Ä–æ—Å—å –∫—É–±–∏–∫ ‚Äî –æ—Å–≤–æ–±–æ–¥–∏ –≤—Ä–µ–º—è –¥–ª—è –≤–∞–∂–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏–π.",

    "–ú—ã —Ö–æ–¥–∏–º –ø–æ –∫—Ä—É–≥—É: –≤—ã–±–æ—Ä ‚Üí –ø—Ä–∏–≤—ã—á–∫–∞ ‚Üí –∞–≤—Ç–æ–º–∞—Ç.\n\n"
    "–ê —á—Ç–æ, –µ—Å–ª–∏ –¥–æ–±–∞–≤–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ—Å—Ç–∏? üé≤\n"
    "–í–¥—Ä—É–≥ —Å–µ–≥–æ–¥–Ω—è –≤—Å—ë –ø–æ–π–¥—ë—Ç –ø–æ-–¥—Ä—É–≥–æ–º—É.\n\n"
    "–ù–∞–∑–Ω–∞—á—å –æ–ø—Ü–∏–∏ –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –±—Ä–æ—Å—å –∫—É–±–∏–∫ ‚Äî –æ—Å–≤–æ–±–æ–¥–∏ –≤—Ä–µ–º—è –¥–ª—è –≤–∞–∂–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏–π.",

    "–ù–∞—à–∏ –≤—ã–±–æ—Ä—ã ‚Äî —ç—Ç–æ —Å–ª–µ–¥ –ø—Ä–æ—à–ª–æ–≥–æ.\n"
    "–•–æ—á–µ—à—å —à–∞–≥–Ω—É—Ç—å –≤ –Ω–æ–≤–æ–µ ‚Äî –¥–æ–≤–µ—Ä—å—Å—è —Å–ª—É—á–∞—é.\n\n"
    "–ö—É–±–∏–∫ –∑–Ω–∞–µ—Ç –±–æ–ª—å—à–µ, —á–µ–º –∫–∞–∂–µ—Ç—Å—è üòâ\n\n"
    "–ù–∞–∑–Ω–∞—á—å –æ–ø—Ü–∏–∏ –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –±—Ä–æ—Å—å –∫—É–±–∏–∫ ‚Äî –æ—Å–≤–æ–±–æ–¥–∏ –≤—Ä–µ–º—è –¥–ª—è –≤–∞–∂–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏–π."
]

# –ö–Ω–æ–ø–∫–∏
def main_menu():
    keyboard = [
        [InlineKeyboardButton("‚ÄÇ‚ÄÇüé≤‚ÄÇ–ë–†–û–°–ò–¢–¨‚ÄÇ–ö–£–ë–ò–ö‚ÄÇ‚ÄÇ", callback_data="simple_roll")],
        [InlineKeyboardButton("‚ÄÇ‚ÄÇüó≥‚ÄÇ–ù–ê–ó–ù–ê–ß–ò–¢–¨‚ÄÇ–í–´–ë–û–†–´‚ÄÇ‚ÄÇ", callback_data="start_choices")]
    ]
    return InlineKeyboardMarkup(keyboard)

def roll_button():
    return InlineKeyboardMarkup([
        [InlineKeyboardButton("‚ÄÇ‚ÄÇüé≤‚ÄÇ–ë–†–û–°–ò–¢–¨‚ÄÇ–ö–£–ë–ò–ö‚ÄÇ‚ÄÇ", callback_data="choice_roll")]
    ])

# /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    welcome = random.choice(welcome_messages)
    await update.message.reply_text(welcome)
    await update.message.reply_text("–í—ã–±–µ—Ä–∏, —á—Ç–æ —Å–¥–µ–ª–∞—Ç—å:", reply_markup=main_menu())

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫
async def button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    user_id = query.from_user.id

    if query.data == "simple_roll":
        number = random.randint(1, 6)
        choice = default_options[number - 1]
        await query.message.reply_text(f"üé≤ –í—ã–ø–∞–ª–æ —á–∏—Å–ª–æ: {number}\nüëâ {choice}", reply_markup=main_menu())

    elif query.data == "start_choices":
        await query.message.reply_text(
            "–ù–∞–ø–∏—à–∏ 6 –Ω–æ–≤—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤, –∫–∞–∂–¥—ã–π —Å –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏. –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n–ø–æ—á–∏—Ç–∞—Ç—å\n–ø—Ä–æ–≥—É–ª—è—Ç—å—Å—è\n–≤—ã–ø–∏—Ç—å —á–∞–π"
        )

    elif query.data == "choice_roll":
        if user_id not in user_choices or len(user_choices[user_id]) != 6:
            await query.message.reply_text("–¢—ã –µ—â—ë –Ω–µ –ø—Ä–∏—Å–ª–∞–ª 6 –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤. –ù–∞–ø–∏—à–∏ –∏—Ö —Å–Ω–∞—á–∞–ª–∞.")
            return
        number = random.randint(1, 6)
        choice = user_choices[user_id][number - 1]
        await query.message.reply_text(f"üé≤ –í—ã–ø–∞–ª–æ —á–∏—Å–ª–æ: {number}\nüëâ {choice}", reply_markup=main_menu())

# –°–æ–æ–±—â–µ–Ω–∏—è —Å 6 –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏
async def message_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.message.from_user.id
    text = update.message.text.strip()

    lines = [line.strip() for line in text.split("\n") if line.strip()]
    if len(lines) != 6:
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–∏—à–ª–∏ —Ä–æ–≤–Ω–æ 6 —Å—Ç—Ä–æ–∫.")
        return

    user_choices[user_id] = lines
    await update.message.reply_text("–ü—Ä–∏–Ω—è—Ç–æ! –¢–µ–ø–µ—Ä—å –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –±—Ä–æ—Å–∏—Ç—å –∫—É–±–∏–∫:", reply_markup=roll_button())

# –ó–∞–ø—É—Å–∫
app = ApplicationBuilder().token("7958944255:AAE9n_DrxHDuiOkvc1K_hlrkk122NpZ5L3Y").build()

app.add_handler(CommandHandler("start", start))
app.add_handler(CallbackQueryHandler(button_handler))
app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, message_handler))

app.run_polling()
